{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./List.css';import axios from'axios';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const List=_ref=>{let{url}=_ref;const[list,setList]=useState([]);const[categories,setCategories]=useState([]);const[selectedCategory,setSelectedCategory]=useState('');const fetchList=async()=>{const response=await axios.get(`${url}/api/food/list`);if(response.data.success){setList(response.data.data);const uniqueCategories=[...new Set(response.data.data.map(item=>item.category))];setCategories(uniqueCategories);}else{toast.error(\"Error fetching food list\");}};const toggleDisplay=async(foodId,currentStatus)=>{const response=await axios.post(`${url}/api/food/toggleDisplay`,{id:foodId,display:!currentStatus});if(response.data.success){toast.success(response.data.message);await fetchList();}else{toast.error(\"Error toggling display\");}};useEffect(()=>{fetchList();},[]);const filteredList=selectedCategory?list.filter(item=>item.category===selectedCategory):list;// Sort the filtered list alphabetically by name\nconst sortedList=filteredList.sort((a,b)=>a.name.localeCompare(b.name));return/*#__PURE__*/_jsxs(\"div\",{className:\"list add flex-col\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"heading\",children:\"Food List:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-section\",children:/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"filter-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),categories.map((category,index)=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},index))]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"list-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-table-format title\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Image\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Action\"})]}),sortedList.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"list-table-format\",children:[/*#__PURE__*/_jsx(\"img\",{src:`${url}/images/${item.image}`,alt:\"\"}),/*#__PURE__*/_jsx(\"p\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"$ \",item.price]}),/*#__PURE__*/_jsxs(\"label\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:item.display,onChange:()=>toggleDisplay(item._id,item.display)}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]},index))]})]});};export default List;","map":{"version":3,"names":["React","useEffect","useState","axios","toast","jsx","_jsx","jsxs","_jsxs","List","_ref","url","list","setList","categories","setCategories","selectedCategory","setSelectedCategory","fetchList","response","get","data","success","uniqueCategories","Set","map","item","category","error","toggleDisplay","foodId","currentStatus","post","id","display","message","filteredList","filter","sortedList","sort","a","b","name","localeCompare","className","children","value","onChange","e","target","index","src","image","alt","price","type","checked","_id"],"sources":["/Users/khushichawla/Desktop/Projects/web-app/frontend/src/pages/List/List.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './List.css';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst List = ({ url }) => {\n  const [list, setList] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const fetchList = async () => {\n    const response = await axios.get(`${url}/api/food/list`);\n    if (response.data.success) {\n      setList(response.data.data);\n      const uniqueCategories = [...new Set(response.data.data.map(item => item.category))];\n      setCategories(uniqueCategories);\n    } else {\n      toast.error(\"Error fetching food list\");\n    }\n  };\n\n  const toggleDisplay = async (foodId, currentStatus) => {\n    const response = await axios.post(`${url}/api/food/toggleDisplay`, { id: foodId, display: !currentStatus });\n    if (response.data.success) {\n      toast.success(response.data.message);\n      await fetchList(); \n    } else {\n      toast.error(\"Error toggling display\");\n    }\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n\n  const filteredList = selectedCategory \n    ? list.filter(item => item.category === selectedCategory) \n    : list;\n\n  // Sort the filtered list alphabetically by name\n  const sortedList = filteredList.sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <div className='list add flex-col'>\n      <p className='heading'>Food List:</p>\n\n      {/* Filter Section */}\n      <div className='filter-section'>\n        <select \n          value={selectedCategory} \n          onChange={(e) => setSelectedCategory(e.target.value)} \n          className='filter-dropdown'\n        >\n          <option value=''>All</option>\n          {categories.map((category, index) => (\n            <option key={index} value={category}>{category}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className='list-table'>\n        <div className='list-table-format title'>\n          <p>Image</p>\n          <p>Name</p>\n          <p>Price</p>\n          <p>Action</p>\n        </div>\n        {sortedList.map((item, index) => (\n          <div key={index} className='list-table-format'>\n            <img src={`${url}/images/${item.image}`} alt=\"\" />\n            <p>{item.name}</p>\n            <p>$ {item.price}</p>\n            <label className=\"toggle-switch\">\n              <input \n                type=\"checkbox\" \n                checked={item.display} \n                onChange={() => toggleDisplay(item._id, item.display)} \n              />\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default List;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}