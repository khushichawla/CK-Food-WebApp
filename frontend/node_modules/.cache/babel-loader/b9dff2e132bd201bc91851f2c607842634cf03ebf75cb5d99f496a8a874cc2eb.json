{"ast":null,"code":"var _jsxFileName = \"/Users/khushichawla/Desktop/Projects/web-app/frontend/src/context/StoreContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\n// import { food_list} from \"../assets/assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext(null);\nconst StoreContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const url = \"http://localhost:4000\";\n  const [token, setToken] = useState(\"\");\n  const [food_list, setFoodlist] = useState([]);\n  const addToCart = async itemId => {\n    setCartItems(prev => {\n      const updatedCart = {\n        ...prev\n      };\n      updatedCart[itemId] = (updatedCart[itemId] || 0) + 1; // Increment item count\n      console.log(\"Updated Cart Items:\", updatedCart); // Log updated cart items\n      return updatedCart;\n    });\n    if (token) {\n      try {\n        await axios.post(url + \"/api/cart/add\", {\n          itemId\n        }, {\n          headers: {\n            token\n          }\n        });\n      } catch (error) {\n        console.error(\"Error adding to cart:\", error);\n      }\n    }\n  };\n  const removeFromCart = async itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n\n    // if user is logged in\n    if (token) {\n      await axios.post(url + \"/api/cart/remove\", {\n        itemId\n      }, {\n        headers: {\n          token\n        }\n      });\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = food_list.find(product => product._id === item);\n        totalAmount += itemInfo.price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartQuantity = () => {\n    let totalQuantity = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalQuantity += cartItems[item];\n      }\n    }\n    return totalQuantity;\n  };\n  const fetchFoodList = async () => {\n    const response = await axios.get(url + \"/api/food/list\");\n    setFoodlist(response.data.data);\n  };\n  const loadCartData = async token => {\n    try {\n      const response = await axios.get(url + \"/api/cart/get\", {\n        headers: {\n          token\n        }\n      });\n      console.log(\"Loaded Cart Data:\", response.data.cartData);\n      setCartItems(response.data.cartData);\n    } catch (error) {\n      console.error(\"Error loading cart data:\", error);\n    }\n  };\n  const resetCart = () => {\n    setCartItems({});\n  };\n\n  // stores the token even if the page is refereshed\n  useEffect(() => {\n    async function loadData() {\n      await fetchFoodList();\n      if (localStorage.getItem(\"token\")) {\n        setToken(localStorage.getItem(\"token\"));\n        await loadCartData(localStorage.getItem(\"token\"));\n      }\n    }\n    loadData();\n  }, []);\n  const contextValue = {\n    food_list,\n    cartItems,\n    setCartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount,\n    getTotalCartQuantity,\n    resetCart,\n    url,\n    token,\n    setToken\n  };\n  console.log(\"Context Value:\", contextValue);\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreContextProvider, \"07ii1/aXOGC9QZbS6E6IbMCwrc0=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","StoreContext","StoreContextProvider","props","_s","cartItems","setCartItems","url","token","setToken","food_list","setFoodlist","addToCart","itemId","prev","updatedCart","console","log","post","headers","error","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","_id","price","getTotalCartQuantity","totalQuantity","fetchFoodList","response","get","data","loadCartData","cartData","resetCart","loadData","localStorage","getItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khushichawla/Desktop/Projects/web-app/frontend/src/context/StoreContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from 'axios'\n// import { food_list} from \"../assets/assets\";\n\nexport const StoreContext = createContext(null);\n\nconst StoreContextProvider = (props) => {\n\n    const [cartItems, setCartItems] = useState({});\n    const url = \"http://localhost:4000\";\n    const [token, setToken] = useState(\"\");\n    const [food_list, setFoodlist] = useState([]);\n\n    const addToCart = async (itemId) => {\n        setCartItems((prev) => {\n            const updatedCart = { ...prev };\n            updatedCart[itemId] = (updatedCart[itemId] || 0) + 1; // Increment item count\n            console.log(\"Updated Cart Items:\", updatedCart); // Log updated cart items\n            return updatedCart;\n        });\n    \n        if (token) {\n            try {\n                await axios.post(url + \"/api/cart/add\", { itemId }, { headers: { token } });\n            } catch (error) {\n                console.error(\"Error adding to cart:\", error);\n            }\n        }\n    };\n\n    const removeFromCart = async (itemId) => {\n        setCartItems((prev)=>({...prev, [itemId]:prev[itemId]-1}))\n        \n        // if user is logged in\n        if (token) {\n            await axios.post(url + \"/api/cart/remove\", {itemId}, {headers:{token}});\n        }\n    }\n\n    const getTotalCartAmount = () => {\n        let totalAmount = 0;\n\n        for (const item in cartItems) {\n            if (cartItems[item] > 0) {\n                let itemInfo = food_list.find((product) => product._id === item);\n                totalAmount += itemInfo.price*cartItems[item];\n            }\n        }\n\n        return totalAmount;\n    }\n\n    const getTotalCartQuantity = () => {\n        let totalQuantity = 0;\n\n        for (const item in cartItems) {\n            if (cartItems[item] > 0) {\n                totalQuantity += cartItems[item];\n            }\n        }\n\n        return totalQuantity;\n    }\n\n    const fetchFoodList = async () => {\n        const response = await axios.get(url+\"/api/food/list\")\n        setFoodlist(response.data.data);\n    }\n\n    const loadCartData = async (token) => {\n        try {\n            const response = await axios.get(url + \"/api/cart/get\", {headers:{token}});\n            console.log(\"Loaded Cart Data:\", response.data.cartData);\n            setCartItems(response.data.cartData);\n        } catch (error) {\n            console.error(\"Error loading cart data:\", error);\n        }\n    }\n\n    const resetCart = () => {\n        setCartItems({});\n    };\n    \n    // stores the token even if the page is refereshed\n    useEffect(() => {\n        async function loadData() {\n            await fetchFoodList();\n            if (localStorage.getItem(\"token\")) {\n                setToken(localStorage.getItem(\"token\"));\n                await loadCartData(localStorage.getItem(\"token\"));\n            }\n        }\n        loadData();\n    },[])\n\n    const contextValue = {\n        food_list,\n        cartItems,\n        setCartItems,\n        addToCart,\n        removeFromCart,\n        getTotalCartAmount,\n        getTotalCartQuantity,\n        resetCart,\n        url,\n        token,\n        setToken\n    };\n\n    console.log(\"Context Value:\", contextValue); \n\n    return (\n        <StoreContext.Provider value={contextValue}>\n            {props.children}\n        </StoreContext.Provider>\n    )\n}\n\nexport default StoreContextProvider"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}