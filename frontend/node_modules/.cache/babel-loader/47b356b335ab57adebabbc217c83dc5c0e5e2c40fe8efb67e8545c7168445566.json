{"ast":null,"code":"var _jsxFileName = \"/Users/khushichawla/Desktop/Projects/web-app/frontend/src/pages/List/List.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './List.css';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  url\n}) => {\n  _s();\n  const [list, setList] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  const fetchList = async () => {\n    const response = await axios.get(`${url}/api/food/list`);\n    console.log(response.data);\n    if (response.data.success) {\n      setList(response.data.data);\n    } else {\n      toast.error(\"Error\");\n    }\n  };\n\n  // const removeFood = async (foodId) => {\n  //   const response = await axios.post(`${url}/api/food/remove`, {id:foodId})\n  //   await fetchList();\n  //   if (response.data.success) {\n  //     toast.success(response.data.message);\n  //   } else {\n  //     toast.error(\"Error\");\n  //   }\n  // }\n\n  const toggleDisplay = async (foodId, currentStatus) => {\n    const response = await axios.post(`${url}/api/food/toggleDisplay`, {\n      id: foodId,\n      display: !currentStatus\n    });\n    if (response.data.success) {\n      toast.success(response.data.message);\n      await fetchList(); // Refresh the list after the toggle\n    } else {\n      toast.error(\"Error\");\n    }\n  };\n\n  // fetchlist everytime page is refreshed\n  useEffect(() => {\n    fetchList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list add flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"All Foods List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Filter Menu: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), [\"All\", \"Curries\", \"Breads\", \"Rice\", \"Sides\"].map(status => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filter === status ? 'active' : ''}`,\n        onClick: () => setFilter(status),\n        children: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-table-format title\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-table-format\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${url}/images/` + item.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"toggle-switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: item.display,\n              onChange: () => toggleDisplay(item._id, item.display)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"2TH72KAAAzJW2N4on7tFc9O0Kwc=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","jsxDEV","_jsxDEV","List","url","_s","list","setList","filter","setFilter","fetchList","response","get","console","log","data","success","error","toggleDisplay","foodId","currentStatus","post","id","display","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","status","onClick","item","index","src","image","alt","name","category","price","quantity","type","checked","onChange","_id","_c","$RefreshReg$"],"sources":["/Users/khushichawla/Desktop/Projects/web-app/frontend/src/pages/List/List.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './List.css'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\n\nconst List = ({url}) => {\n  const [list, setList] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n\n  const fetchList = async () => {\n    const response = await axios.get(`${url}/api/food/list`);\n    console.log(response.data);\n    if (response.data.success) {\n      setList(response.data.data);\n    } else {\n      toast.error(\"Error\")\n    }\n  }\n\n  // const removeFood = async (foodId) => {\n  //   const response = await axios.post(`${url}/api/food/remove`, {id:foodId})\n  //   await fetchList();\n  //   if (response.data.success) {\n  //     toast.success(response.data.message);\n  //   } else {\n  //     toast.error(\"Error\");\n  //   }\n  // }\n\n  const toggleDisplay = async (foodId, currentStatus) => {\n    const response = await axios.post(`${url}/api/food/toggleDisplay`, { id: foodId, display: !currentStatus });\n    if (response.data.success) {\n      toast.success(response.data.message);\n      await fetchList(); // Refresh the list after the toggle\n    } else {\n      toast.error(\"Error\");\n    }\n  };\n\n  // fetchlist everytime page is refreshed\n  useEffect(()=>{\n    fetchList();\n  },[])\n\n  return (\n    <div className='list add flex-col'>\n      <p>All Foods List</p>\n      {/* Filter Options as Buttons */}\n      <div className='filter-options'>\n        <span>Filter Menu: </span>\n        {[\"All\", \"Curries\", \"Breads\", \"Rice\", \"Sides\"].map(status => (\n          <button\n            key={status}\n            className={`filter-button ${filter === status ? 'active' : ''}`}\n            onClick={() => setFilter(status)}\n          >\n            {status}\n          </button>\n        ))}\n      </div>\n      <div className='list-table'>\n        <div className='list-table-format title'>\n          <p>Image</p>\n          <p>Name</p>\n          <p>Category</p>\n          <p>Price</p>\n          <p>Quantity</p>\n          <p>Action</p>\n        </div>\n        {list.map((item, index)=>{\n          return (\n            <div key={index} className='list-table-format'>\n              <img src={`${url}/images/`+ item.image} alt=\"\"/>\n              <p>{item.name}</p>\n              <p>{item.category}</p>\n              <p>{item.price}</p>\n              <p>{item.quantity}</p>\n              <label className=\"toggle-switch\">\n                  <input \n                    type=\"checkbox\" \n                    checked={item.display} \n                    onChange={() => toggleDisplay(item._id, item.display)} \n                  />\n                  <span className=\"slider\"></span>\n                </label>\n              {/* <p onClick={()=>removeFood(item._id)} className='cursor'>X</p> */}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default List\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}