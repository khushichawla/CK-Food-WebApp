{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport './LoginPopup.css';\nimport { StoreContext } from '../../context/StoreContext';\nimport axios from 'axios';\nconst onLogin = async event => {\n  event.preventDefault(); // Stops the webpage from loading\n\n  let newUrl = url;\n  if (currState === \"Login\") {\n    newUrl += \"/api/user/login\";\n  } else {\n    newUrl += \"/api/user/register\";\n  }\n  const response = await axios.post(newUrl, data);\n  if (response.data.success) {\n    setToken(response.data.token);\n    localStorage.setItem(\"token\", response.data.token);\n\n    // Store user role if logging in\n    if (currState === \"Login\") {\n      localStorage.setItem(\"userRole\", response.data.role); // Store the role\n    }\n    setShowLogin(false);\n\n    // Redirect based on role\n    if (currState === \"Login\" && response.data.role === \"Admin\") {\n      window.location.href = '/admin'; // Redirect to admin panel (adjust the path as needed)\n    } else {\n      window.location.href = '/'; // Redirect to user panel (adjust the path as needed)\n    }\n  } else {\n    alert(response.data.message);\n  }\n};\nexport default LoginPopup;","map":{"version":3,"names":["React","useContext","useState","StoreContext","axios","onLogin","event","preventDefault","newUrl","url","currState","response","post","data","success","setToken","token","localStorage","setItem","role","setShowLogin","window","location","href","alert","message","LoginPopup"],"sources":["/Users/khushichawla/Desktop/Projects/web-app/frontend/src/components/LoginPopup/LoginPopup.js"],"sourcesContent":["import React, {useContext, useState} from 'react'\nimport './LoginPopup.css';\nimport { StoreContext } from '../../context/StoreContext';\nimport axios from 'axios';\n\nconst onLogin = async (event) => {\n  event.preventDefault(); // Stops the webpage from loading\n\n  let newUrl = url;\n  if (currState === \"Login\") {\n      newUrl += \"/api/user/login\";\n  } else {\n      newUrl += \"/api/user/register\";\n  }\n\n  const response = await axios.post(newUrl, data);\n  if (response.data.success) {\n      setToken(response.data.token);\n      localStorage.setItem(\"token\", response.data.token);\n\n      // Store user role if logging in\n      if (currState === \"Login\") {\n          localStorage.setItem(\"userRole\", response.data.role); // Store the role\n      }\n\n      setShowLogin(false);\n\n      // Redirect based on role\n      if (currState === \"Login\" && response.data.role === \"Admin\") {\n          window.location.href = '/admin'; // Redirect to admin panel (adjust the path as needed)\n      } else {\n          window.location.href = '/'; // Redirect to user panel (adjust the path as needed)\n      }\n  } else {\n      alert(response.data.message);\n  }\n};\n\nexport default LoginPopup\n"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAO,kBAAkB;AACzB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,MAAOC,KAAK,IAAK;EAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;EAExB,IAAIC,MAAM,GAAGC,GAAG;EAChB,IAAIC,SAAS,KAAK,OAAO,EAAE;IACvBF,MAAM,IAAI,iBAAiB;EAC/B,CAAC,MAAM;IACHA,MAAM,IAAI,oBAAoB;EAClC;EAEA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAACJ,MAAM,EAAEK,IAAI,CAAC;EAC/C,IAAIF,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;IACvBC,QAAQ,CAACJ,QAAQ,CAACE,IAAI,CAACG,KAAK,CAAC;IAC7BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACE,IAAI,CAACG,KAAK,CAAC;;IAElD;IACA,IAAIN,SAAS,KAAK,OAAO,EAAE;MACvBO,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAC1D;IAEAC,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACA,IAAIV,SAAS,KAAK,OAAO,IAAIC,QAAQ,CAACE,IAAI,CAACM,IAAI,KAAK,OAAO,EAAE;MACzDE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACrC,CAAC,MAAM;MACHF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;IAChC;EACJ,CAAC,MAAM;IACHC,KAAK,CAACb,QAAQ,CAACE,IAAI,CAACY,OAAO,CAAC;EAChC;AACF,CAAC;AAED,eAAeC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}